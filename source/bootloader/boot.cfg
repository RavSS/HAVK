# The syntax for my configuration format is extremely simple. It's just a
# key-value pair file. It's space sensitive and the delimiter should be LF, as
# that's how I have configured my KVP library. There should not be any spaces
# around the assignment symbol (which is currently the equals sign) or else
# spaces will show in the key or value. Keys and values should not go over
# 512 characters/bytes each; however, there is no exact limit placed on their
# lengths. The 512-byte limit has to do with a workaround in the kernel.

# The first key specified is "HAVK" and it is mandatory, as it points to the
# path of the kernel ELF.
HAVK=\HAVK\HAVK.elf

# Anything beginning under "BOOT_FILE" is a file that gets loaded into memory,
# with the "PATH" identifier at the end indicating the file's path on the ESP.
# The second identifier between the dots is the file index. Any other
# identifiers at the end depend on the kernel. The file itself must exist on
# the disk.
BOOT_FILE.1.NAME=Initialiser
BOOT_FILE.1.PATH=\HAVK\system\initialiser.elf
BOOT_FILE.1.EXECUTABLE=Y

BOOT_FILE.2.NAME=ATA Driver
BOOT_FILE.2.PATH=\HAVK\system\ata.elf
BOOT_FILE.2.EXECUTABLE=Y

BOOT_FILE.3.NAME=Drive Manager
BOOT_FILE.3.PATH=\HAVK\system\drive_manager.elf
BOOT_FILE.3.EXECUTABLE=Y

BOOT_FILE.4.NAME=FAT
BOOT_FILE.4.PATH=\HAVK\system\fat.elf
BOOT_FILE.4.EXECUTABLE=Y

# This indicates the graphics mode for the (U)EFI Graphical Output Protocol.
# It is technically zero-based, but I've made it one-based so zero can be used
# to indicate errors or non-selection. This is just provided for convenience
# to skip the interactive part of the bootloader.
UEFI.GOP.GRAPHICS_MODE=1